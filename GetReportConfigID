=begin
This script prompts the user for a report template name and then returns the report
configuration IDs for any reports that are currently using the report template.  
This comes in handy since the report config IDs are useful for other API functions
but not easy to determine via the user interface.
=end

#!/usr/bin/env ruby
require 'nexpose'
require 'optparse'
require 'io/console'
require 'csv'

include Nexpose

# If these entries are set this script will not prompt the user for input
host=''
port=''
user=''
password=''
template_id=''

if host == ''
  print "Nexpose IP: "
  host = gets.chomp
end

if port == ''
  print "Nexpose port: "
  port = gets.chomp
end

if user == ''
  print "User: "
  user = gets.chomp
end

def get_password(prompt='Password: ')
  print prompt
  STDIN.noecho(&:gets).chomp
end

if password == ''
  password = get_password
end

if template_id == ''
  puts ''
  print "Report Template Name: "
  template_name=gets.chomp
end

nsc = Nexpose::Connection.new(host, user, password, port)
nsc.login
at_exit { nsc.logout }

template = nsc.report_templates.find { |t| t.name == template_name }  
temp_id = template.id  
temp_reports = nsc.reports.select { |r| r.template_id == temp_id }  
puts "The following report config IDs use this template:"
temp_reports.each do |r|  
  puts r.config_id   
end
